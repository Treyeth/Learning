### Communicating with Data in the Tidyverse 
https://www.datacamp.com/courses/communicating-with-data-in-the-tidyverse

Chapter 1 

Import -> Tidy -> Transform - Visualize - Model -> Communicate

### Histogram

plot_data <- ilo_data %>%
              filter(year == 2006)
ggplot(plot_data) +
  geom_histogram(
    aes(x = working_hours))

### Group & summarize

ilo_data %>%
  group_by(country) %>%
  summarize(median_working_hours = median(working_hours))
  
### Custom ggplot2 themes

### Example 1
ggplot(plot_data) +
  geom_histogram(aes(
    x = working_hours)) +
  labs(x = "Working hours per week",
    y = "Number of countries") +
  theme(
    text = element_text(
    family = "Bookman",
    color = "gray25")
  )
### Example 2
  ggplot(plot_data) +
    geom_histogram(aes(
      x = working_hours)) +
  labs(x = "Working hours per week",
      y = "Number of countries") +
  theme_classic() +
  theme(
    text = element_text(
    family = "Bookman",
    color = "gray25")
  )

### Example 3
  ggplot(plot_data) +
    geom_point(aes(x = working_hours, y = hourly_compensation)) +
    # Add labels
    labs(
      x = "Working hours per week",
      y = "Hourly compensation",
      title = "The more people work, the less compensation they seem to receive",
      subtitle = "Working hours and hourly compensation in European countries, 2006",
      caption = "Data source: ILO, 2017"
    )

### theme_minimal(), theme_light()

### Theme configuration options
axis.title
  label of axes (element_text; inherits from text)
axis.title.x
  x axis label (element_text; inherits from axis.title)
axis.title.x.top
  x axis label on top axis (element_text; inherits from axis.title.x)
axis.title.x.bottom
  x axis label on bottom axis (element_text; inherits from axis.title.x)
  
### Example 4

ilo_plot <- ilo_plot +
  theme_minimal() +
  # Customize the "minimal" theme with another custom "theme" call
  theme(
    text = element_text(family = "Bookman"),
    title = element_text(color = "gray25"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(color = "gray30")
  )
  
### Very nice theme

  ilo_plot +
    # "theme" calls can be stacked upon each other, so this is already the third call of "theme"
    theme(
      plot.background = element_rect(fill = "gray95"),
      plot.margin = unit(c(5, 10, 5, 10), units = "mm")
    )

### Two types of facet_grid

ilo_data <- ilo_data %>%
              filter(year == "1996" |
              year == "2006")
ggplot(ilo_data) +
  geom_histogram(aes(
       x = working_hours)) +
  labs(x = "Working hours per week",
       y = "Number of countries") +
  facet_grid(. ~ year)
### You can change facet_grid to facet_grid(year ~ .) or facets = ~ year
### Define theme function

  theme_green <- function(){
    theme(
    plot.background =
      element_rect(fill = "green"),
    panel.background =
      element_rect(fill =
        "lightgreen")
    )
  }
  ggplot(ilo_data) +
    geom_histogram(aes(
         x = working_hours)) +
    labs(x = "Working hours per week",
         y = "Number of countries") +
    theme_green()
    
### Dot plots with ggplot2 

  ggplot((ilo_data %>% filter(year == 2006))) +
    geom_dotplot(aes(x = working_hours)) +
    labs(x = "Working hours per week",
         y = "Share of countries")
# geom_path() connects the observations in the order in which they appear in the data

  ilo_plot +
   # Add another theme call
    theme(
      # Change the background fill and color
      strip.background = element_rect(fill = "gray60",  color = "gray95"),
      # Change the color of the text
      strip.text = element_text(color = "white")
    )
    
### Dotplot

ggplot(ilo_data) +
  geom_path(aes(x = working_hours, y = country))
 
### With direction
ggplot(ilo_data) +
  geom_path(aes(x = working_hours, y = country),
  # Add an arrow to each path
            arrow = arrow(length = unit(1.5, "mm"), type = "closed"))
            
### The order of factor levels determine the order of appearance in ggplot2.
### Reordering factors can be done with the forcats package
### fct_drop for dropping levels
### fct_rev for reversinhg factor levels
### fct_reorder for reordering them

# Reorder country factor levels

library(forcats)
ilo_data <- ilo_data %>%
  # Arrange data frame
  arrange(year) %>%
  # Reorder countries by working hours in 2006
  mutate(country = fct_reorder(country,
                               working_hours,
                               last))
ggplot(ilo_data) +
  geom_path(aes(x = working_hours, y = country),
            arrow = arrow(length = unit(1.5, "mm"), type = "closed")) +
    geom_text(
          aes(x = working_hours,
              y = country,
              label = round(working_hours, 1))
          )
          
### Solving the problem of label placement

ilo_dot_plot <- ggplot(ilo_data) +
  geom_path(aes(x = working_hours, y = country),
            arrow = arrow(length = unit(1.5, "mm"), type = "closed")) +
    # Specify the hjust aesthetic with a conditional value
    geom_text(
          aes(x = working_hours,
              y = country,
              label = round(working_hours, 1),
              hjust = ifelse(year == "2006", 1.4, -0.4)
            ),
          # Change the appearance of the text
          size = 3,
          family = "Bookman",
          color = "gray25"
          )
 
### Use coord_cartesian instead of xlim and ylim!
### Change the viewport so labels don't overlap with plot border

ilo_dot_plot <- ilo_dot_plot +
  # Add labels to the plot
  labs(
    x = "Working hours per week",
    y = "Country",
    title = "People work less in 2006 compared to 1996",
    subtitle = "Working hours in European countries, development since 1996",
    caption = "Data source: ILO, 2017"
  ) +
  # Apply your theme
  theme_ilo() +
  # Change the viewport
  coord_cartesian(xlim = c(25, 41))
  
### Optimizing the plot for mobile devices
# Compute temporary data set for optimal label placement
median_working_hours <- ilo_data %>%
  group_by(country) %>%
  summarize(median_working_hours_per_country = median(working_hours)) %>%
  ungroup()

# Have a look at the structure of this data set
str(median_working_hours)

ilo_dot_plot +
  # Add label for country
  geom_text(data = median_working_hours,
            aes(y = country,
                x = median_working_hours_per_country,
                label = country),
            vjust = 2,
            family = "Bookman",
            color = "gray25") +
  # Remove axes and grids
  theme(
    axis.ticks = element_blank(),
    axis.title = element_blank(),
    axis.text = element_blank(),
    panel.grid = element_blank(),
    # Also, let's reduce the font size of the subtitle
    plot.subtitle = element_text(size = 9)
  )
