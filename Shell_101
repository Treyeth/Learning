Introduction to Shell for Data Science - https://campus.datacamp.com/courses/introduction-to-shell-for-data-science

Commands

# pwd - print working directory
# ls  - lists the contents of your current directory (the one displayed by pwd)
# we can call ls /home/repl showing what's in the starting directory
ls /home/repl/seasonal
# Relative Path style (if we are already in /home/repl)
ls course.txt
ls seasonal/summer.csv
ls people
# Basically you don't need to specify the whole path if you're already in there
# cd - change directory
cd seasonal
# ls ~ will always list the contents of your home directory
# cd ~ will always take you home
# ls and ls. do the same thing
# cd .. will move you to the directory above
# cd ~/../.  - the path means 'home directory', 'up a level', 'here'.
# cp - copy file
cp seasonal/summer.csv backup/summer.bck
cp seasonal/spring.csv seasonal/summer.csv backup # copy them to the backup folder
# mv - moves the file from one directory to another
mv autumn.csv winter.csv ..
mv seasonal/spring.csv seasonal/summer.csv backup
mv winter.csv winter.csv.bck # rename the file..
# rm - remove the file/files
rm thesis.txt backup/thesis-2017-08.txt
rm autumn.csv
rm seasonal/summer.csv
# rmdir - delete the directory when it's empty
# mkdir - create directory
rmdir people
mkdir yearly
mkdir yearly/2017
cd /tmp # go to the temporary folder
mv ~/people/agarwal.txt scratch
# cat - prints the contents of file onto the screen
cat course.txt
# less - view large files by pieces
less seasonal/spring.csv seasonal/summer.csv
# space to pagedown, :n to go to the second file and :q to quit
# head - prints the first 10 lines of the file
head people/agarwal.txt
# Tab for autocompletion! 
head -n 5 seasonal/winter.csv
# -n specify the number of lines
# ls -R (recursive) shows every file and directory in the current level then everything in each sub-directory
# -F prints a / after the name of every directory and a * after the name of every runnable program
# man tail - shows help for the function tail
tail -n +7 # displays all but the first six lines of seasonal/spring.csv
cut -f 2-5,8 -d , values.csv # select columns 2 through 5 and columns 8 using comma as the separator
# -f means fields
# -d means delimiter
# history will print a list of commands you have run recently
# !55 re-run the 55th command in your history
# re-run a command by typing ! followed by the command
!head
!cut
# grep can search for patterns as well
# -c: print a count of matching lines rather than the lines themselves
# -h: do not print the names of files when searching multiple files
# -i: ignore case (e.g., treat "Regression" and "regression" as matches)
# -l: print the names of files that contain matches, not the matches
# -n: print line numbers for matching lines
# -v: invert the match, i.e., only show lines that don't match
grep molar seasonal/autumn.csv
grep -v molar seasonal/autumn.csv
grep -v -n molar seasonal/spring.csv
grep -c incisor seasonal/autumn.csv seasonal/winter.csv
# paste - combine two files
paste seasonal/autumn.csv seasonal/winter.csv
set | grep HISTFILESIZE
echo hello DataCamp!
echo $USER # getting variable value 
training=seasonal/summer.csv # assigning to a variable
for filetype in gif jpg png; do echo $filetype; done
for filename in seasonal/*.csv; do echo $filename; done
files=seasonal/*.csv
for f in $files; do echo $f; done
for file in seasonal/*.csv; do head -n 2 $file | tail -n 1; done
grep -h -v Tooth spring.csv summer.csv > temp.csv
history | tail -n 3 > steps.txt
bash dates.sh
cat teeth.out
A script that processes specific files is useful as a record of what you did, but one that allows you to process any files you want 
is more useful. To support this, you can use the special expression $@ (dollar sign immediately followed by at-sign) to mean "all of 
the command-line parameters given to the script". For example, if unique-lines.sh contains this:
sort $@ | uniq
bash unique-lines.sh seasonal/summer.csv
the shell replaces $@ with seasonal/summer.csv and processes one file. If you run this:
bash unique-lines.sh seasonal/summer.csv seasonal/autumn.csv
